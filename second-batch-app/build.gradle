plugins {
    id 'java'
}

group 'org.example.spring.batch'
version 'final'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.batch:spring-batch-core:5.0.3"
    implementation "org.springframework:spring-context:6.0.13"
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.1.5' // For configuring schema auto-creation
    implementation 'org.postgresql:postgresql:42.6.0' // To connect to Postgresql
    implementation 'mysql:mysql-connector-java:8.0.31' // To connect to MySQL
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3' // Jackson JSON library
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3' // Jackson JSON library
    implementation 'com.google.guava:guava:32.1.3-jre'

    testImplementation 'org.springframework.batch:spring-batch-test:5.0.3' // Unit test support
    testImplementation 'junit:junit:4.13.2' // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1' // JUnit runner
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1' // JUnit runner
    testImplementation 'org.mockito:mockito-core:5.7.0' // Mockito as a preferred way to mock the objects
}

sourceSets {
    main {
        java {
            srcDirs "src/java"
        }
        resources {
            srcDirs "src/res"
        }
    }

    test {
        java {
            srcDirs "src/test"
        }

    }
}

test {
    useJUnitPlatform()
}

// Task to generate records in the input source db
task generateData(type: JavaExec) {
    mainClass = 'org.example.GenerateSourceDatabase'
    classpath = sourceSets.main.runtimeClasspath
}

// Task to build executable jar which includes all necessary dependencies
task buildJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.springframework.batch.core.launch.support.CommandLineJobRunner'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}